@charset "UTF-8";

.model-characteristics {

    @include mq(sm) {
        margin-bottom: -1 * map_get($mq-container-indents, 'sx') / 2;
    }

    &__main-grid {
        @include mq(sx) {
            @include grid;
        }
    }

    &__main-options-col {

        @include mq(sx) {
            @include grid-col-mx(1/2);
        }

        @include mq(md) {
            @include grid-col-mx(1/3);
        }

        @include mq(lg) {
            @include grid-col-mx(2/8);
        }
    }

    &__options-grid-col {
        min-height: 500px; // helper

        @include mq(sx) {
            @include grid-col-mx(1/2);
        }

        @include mq(md) {
            @include grid-col-mx(2/3);
        }

        @include mq(lg) {
            @include grid-col-mx(6/8);
        }
    }

    // presentation-block
    &__presentation-block {
        margin-bottom: map_get($mq-container-indents, 'sx') / 2;

        @include mq(sx) {
            padding-bottom: calc(#{map_get($mq-container-indents, 'sx') / 2} - 1px);
            border-bottom: 1px solid $color-lightest-minimal;
        }
    }

    &__presentation-block-auto-grid {
        @include mq(lg) {
            @include grid;
        }
    }

    &__presentation-block-auto-options-col,
    &__presentation-block-auto-scheme-col {
        &:not(:last-child) {
            margin-bottom: map_get($mq-container-indents, 'sx') / 2;

            @include mq(lg) {
                margin-bottom: 0;
            }
        }
    }

    &__presentation-block-auto-options-col {
        @include mq(lg) {
            @include grid-col-mx(1/3);
        }
    }

    &__presentation-block-auto-scheme-col {

        @include mq(lg) {
            @include grid-col-mx(2/3);
        }
    }

    &__presentation-block-model-title {
        @include mq(sm) {
            display: none;
        }
        @include mq(sx) {
            @include header-h2;

            margin-bottom: map_get($mq-container-indents, 'sx') / 2;
        }

        @include mq(lg) {
            @include header-h1;
        }
    }

    &__scheme-grid {
        display: flex;
        align-items: stretch;
    }

    &__scheme-col {
        display: flex;
        flex-direction: column;
    }

    &__image-block {
        flex-grow: 1;
        position: relative;
        display: flex;
        flex-direction: column;
        padding: 0 2rem 2rem 2rem;

        > img {
            flex-grow: 1;
            width: auto;
            height: auto;
            vertical-align: top;
        }

        &--type-side {
            > img {
                max-width: 12.6rem;

                @include mq(md) {
                    max-width: 21rem;
                }
            }
        }

        &--type-front {
            margin-left: .8rem;

            @include mq(lg) {
                margin-left: map_get($mq-container-indents, 'sx');
            }

            > img {
                max-width: 6rem;

                @include mq(md) {
                    max-width: 10rem;
                }
            }
        }
    }

    &__scheme-arrow-type-1,
    &__scheme-arrow-type-2,
    &__scheme-arrow-type-3,
    &__scheme-arrow-type-4 {
        position: absolute;
        background: $color-lightest;

        &::after {
            position: absolute;
            top: 50%;
            left: 50%;
            padding: .2rem;
            font-size: 1rem;
            line-height: 1.6;
            background: #fff;
            color: $color-lighter;
            content: attr(data-content);

            @include mq(sx) {
                font-size: 1.2rem;
            }
        }
    }

    &__scheme-up-arrow,
    &__scheme-bottom-arrow,
    &__scheme-left-arrow,
    &__scheme-right-arrow {
        @include size(.7rem, .8rem);

        position: absolute;
        background: {
            position: 50%;
            size: contain;
            repeat: no-repeat;
            image: url(../img/icons/arrow-small.svg);
        };
    }

    &__scheme-up-arrow {
        position: absolute;
        top: -1px;
        left: -.3rem;
    }

    &__scheme-bottom-arrow {
        position: absolute;
        bottom: -1px;
        left: -.3rem;
        transform: rotate(180deg);
    }

    &__scheme-left-arrow {
        top: -0.3rem;
        left: -.1rem;
        transform: translateY(-.05rem) rotate(-90deg);
    }

    &__scheme-right-arrow {
        position: absolute;
        top: -0.3rem;
        right: -.1rem;
        transform: translateY(-.05rem) rotate(90deg);
    }

    &__scheme-arrow-type-1 {
        top: 0.1rem;
        bottom: 2.1rem;
        left: .8rem;
        transform: translateX(50%);
        width: .1rem;

        &::after {
            top: 50%;
            left: -50%;
            transform: translate(-50%, -50%) rotate(-90deg);
        }
    }

    &__scheme-arrow-type-2,
    &__scheme-arrow-type-4 {
        bottom: 1rem;
        left: 2.1rem;
        right: 2.1rem;
        height: .1rem;

        &::after {
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            padding-top: 0;
            padding-bottom: 0;
        }
    }

    &__scheme-arrow-type-3 {
        right: .8rem;
        bottom: 2.1rem;
        width: .1rem;
        height: 2.4rem;

        &::after {
            top: 50%;
            left: -50%;
            transform: translate(-50%, calc(-100% - 2rem)) rotate(-90deg);
            padding-top: 0;
            padding-bottom: 0;
        }
    }

    &__scheme-arrow-type-4 {

    }


    // button grid
    &__presentation-block-actions-grid {
        margin-top: map_get($mq-container-indents, 'sx') / 2;

        @include mq(md) {
            @include grid;
        }
    }

    &__presentation-block-actions-col  {

        &:not(:last-child) {
            @include mq(sm) {
                margin-bottom: map_get($mq-container-indents, 'sx') / 4;
            }

            @include mq(sx) {
                margin-bottom: map_get($mq-container-indents, 'sx') / 2;
            }

            @include mq(md) {
                margin-bottom: 0;
            }
        }

        @include mq(md) {
            @include grid-col-mx(1/2);
        }

        @include mq(lg) {
            @include grid-col-mx(1/3);
        }
    }

    &__presentation-subscribe-information {
        margin-top: map_get($mq-container-indents, 'sx') / 2;
        padding-top:  calc(#{map_get($mq-container-indents, 'sx') / 2} - 1px);
        border-top: 1px solid $color-lightest-minimal;
        text-align: center;

        @include mq(sx) {
            margin-top: map_get($mq-container-indents, 'sx') / 2;
        }

        > p {
            color: $color-light;
        }

        > .button {
            margin-top: map_get($mq-container-indents, 'sx') / 4;

            @include mq(sx) {
                margin-top: map_get($mq-container-indents, 'sx') / 2;
                width: 22.4rem;
            }
        }
    }

    // options grid
    &__options {
        @include mq(md) {
            @include grid;
        }
    }

    &__options-col-1-3,
    &__options-col-2-3 {

    }

    &__options-col-1-3 {
        @include mq(md) {
            @include grid-col-mx(1/2);
        }

        @include mq(lg) {
            @include grid-col-mx(1/3);
        }
    }

    &__options-col-2-3 {
        @include mq(md) {
            @include grid-col-mx(1/2);
        }

        @include mq(lg) {
            @include grid-col-mx(2/3);
        }
    }

    &__options-col-grid {
        @include mq(lg) {
            @include grid;
        }
    }

    &__options-col-grid-col {
        &:last-child {
            .model-option-list-item__title > a {
                @include mq(sm) {
                    border-bottom: 1px solid $color-lightest-minimal;
                }
            }
        }

        @include mq(lg) {
            @include grid-col-mx(1/2);
        }
    }
}

.model-option-list-item {
    @include mq(sx) {
        &:not(:last-child) {
            margin-bottom: calc(#{map_get($mq-container-indents, "sx")} / 2);
            padding-bottom: calc(((#{map_get($mq-container-indents, sx)} / 2) / 2) - 1px);
            border-bottom: 1px solid $color-lightest-minimal;
        }
    }

    .model-characteristics__options-col-1-3 & {
        &:first-child {
            .model-option-list-item__title > a {
                @include mq(sm) {
                    border-top-color: $color-lightest-minimal;
                }
            }
        }

    }

    &__title {
        @include mq(sx) {
            margin-bottom: map_get($mq-container-indents, 'sx') / 4;
            pointer-events: none;
        }

        &.is-active {
            a::after {
                transform: translateY(-50%) rotate(180deg);
            }

            + dd {
                overflow: visible;
                margin-top: 0;
                border-color: $color-lightest-minimal !important;
            }
        }

        > a {
            @include header-model-settings-h3;

            position: relative;
            color: $color-cod-gray;

            @include mq(sm) {
                @include text-base(400);

                display: block;
                margin: 0 calc(-1 * #{map-get($mq-container-indents, 'sm')});
                padding: 1.4rem calc(#{map-get($mq-container-indents, 'sx')} + #{map-get($mq-container-indents, 'sm')}) 1.4rem map-get($mq-container-indents, 'sm');
                border-top: 1px solid transparent;
                border-bottom: 1px solid $color-lightest-minimal;
                text-decoration: none !important;
                transition: all 50ms;

                &::after {
                    position: absolute;
                    top: 50%;
                    right: map-get($mq-container-indents, 'sm');;
                    transform: translateY(-50%);
                    max-height: 1rem;
                    border-top: .6rem solid $color-base;
                    border-right: .5rem solid transparent;
                    border-left: .5rem solid transparent;
                    transition: all 300ms;
                    content: "";
                }
            }
            &.is-active {
                display: block;
                border-bottom-color: $color-lightest-minimal;

                &::after {
                    transform: translateY(-50%) rotate(180deg);
                }
            }
        }
    }

    &__content {
        will-change: max-height;
        perspective: 1000;

        @include mq(sm) {
            height: auto;
            border-color: $color-lightest-minimal !important;
            overflow: hidden;
            //SHAME: magic number to allow the accordion to animate
            max-height: 100em;
            transition: max-height 300ms;
        }

        &.is-collapsed {
            @include mq(sm) {
                max-height: 0;
            }
        }

        &.is-active {
            @include mq(sm) {
                position: relative;
                overflow: visible;
            }

            &::after {
                position: absolute;
                bottom: -1 * map_get($mq-container-indents, 'sx') / 4;
                left: -1 * map_get($mq-container-indents, 'sm');
                right: -1 * map_get($mq-container-indents, 'sm');
                height: 1px;
                background-color: $color-lightest-minimal;
                content: "";
            }
        }

        &.accordionIn {
            animation: accordionIn 400ms normal .400ms ease-in-out both 1;
        }

        &.accordionOut {
            opacity: 0 !important;
        }

        > dl {
            color: $color-light;

            &:first-child {
                @include mq(sm) {
                    margin-top: map_get($mq-container-indents, 'sx') / 4;
                }
            }

            @include mq(sm) {
                margin-bottom: map_get($mq-container-indents, 'sx') / 4;
            }

            &:not(:last-child) {
                @include mq(sx) {
                    margin-bottom: map_get($mq-container-indents, 'sx') / 4;
                }
            }

            > dt {
                @include text-small(300);
            }

            > dd {
                font-weight: 400;
            }
        }
    }
}

@keyframes accordionIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity:1;
    }
}

@keyframes accordionOut {
    0% {
        opacity: 1;
    }
    100% {
        opacity:0;
    }
}

.picking-menu {
    &__title {
        @include header-model-settings-h3;

        margin-bottom: map_get($mq-indents, 'sm');
    }

    > dl {

        &:not(:last-child) {
            margin-bottom: map_get($mq-indents, 'sm');
        }

        > dt,
        > dd {
            &:not(:last-child) {
                margin-bottom: 1.2rem;
            }
        }

        > dt {
            font-weight: 900;
            color: $color-lighter;
        }

        > dd {
            > a {
                @include interact(text-decoration, uppercase);

                color: $color-light;

                &.is-current {
                    pointer-events: none;
                    margin-left: -.8rem;
                    padding: calc(.4rem - 1px) calc(.8rem - 1px);
                    border-radius: $border-radius-min;
                    border: 1px solid $color-lighter;
                }
            }
        }
    }
}

.picking-menu-mobile-open {
    margin-bottom: map_get($mq-container-indents, 'sx') / 2;
    text-align: center;
    
    > .button {
        display: block;
        margin-top: map_get($mq-container-indents, 'sx') / 2;
    }
}
