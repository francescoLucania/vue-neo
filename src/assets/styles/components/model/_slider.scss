@charset "UTF-8";

// animations types
@keyframes model-slider-image-loader {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

.model-slider {
    position: relative;
    max-width: 100vw;
    z-index: 9;

    @include mq(lg) {
        min-height: 60rem;
    }

    .container {
        position: relative;
        width: 100%;

        @include mq(sm) {
            z-index: 12;
        }
    }

    @include mq(sx) {
        display: flex;
        flex-direction: column;
        max-height: 100vh;
    }

    @include mq(md) {
        margin-top: 0;
        max-height: calc(90rem - 153px); // magic number (header-height)
    }

    @include mq(lg) {
        max-height: calc(100vh - 10.5rem); // magic number (header-height)
    }

    @include mq-custom(min, 1800px) {
        //min-height: 86rem;
    }

    &__title-line {
        @include mq(sx) {
            position: relative;
            display: flex;
            justify-content: space-between;
            z-index: 10;
        }
    }

    &__title-line-item {
        @include mq(sm) {
            text-align: center;
        }

        @include mq(sx) {
            padding-right: 23.6rem;
        }

        > .tabs {
            margin-top: 1.2rem;
            
            @include mq(sm) {
                &:not(.is-mobile) {
                    display: none;
                }
            }

            @include mq(sx) {
                margin-top: map-get($mq-container-indents, 'sx') / 8;
            }

            &.is-mobile {
                @include mq(sx) {
                    display: none;
                }
            }
        }
    }

    &__model-sub-title {
        @include text-minimal(400);

        margin-bottom: .8rem;
        color: #fff;

        @include mq(sx) {
            @include text-small(400);
        }

        @at-root a#{&} {
            @include interact(text-decoration, underline);
        }
    }

    &__model-title > .rub,
    &__model-title {
        @include header-h1-lg;

        color: #fff;

        @include mq(sm) {
            font-weight: 400;
        }
    }

    &__price {
        @include mq(sm) {
            @include header-h1;
        }
    }

    &__body-type-menu {
        .tooltip-link {
            @include text-small(400);
            @include interact(text-decoration, underline);

            position: relative;
            display: inline;
            padding-right: 2rem;
            color: #fff;

            &::after{
                position: absolute;
                top: 50%;
                right: 0rem;
                transform: translateY(-50%);
                display: block;
                pointer-events: none;
                border-top: 6px solid #fff;
                border-right: 5px solid transparent;
                border-left: 5px solid transparent;
                transition: all $transition-duration-base-min;
                content: ""
            }

            &.is-active {
                &::after {
                    transform: translateY(-50%) rotate(180deg);
                }
            }
        }

        .tooltip {
            text-align: left;
        }
    }


    &__auto {
        position: relative;
        margin-top: calc(#{map_get($mq-container-indents, 'sx')} / 2);

        @include mq(sm) {
            z-index: 11;
        }

        @include mq(sx) {
            margin-top: 9rem;
        }

        @include mq(lg) {
            margin-top: 0;
        }
    }

    &__auto {
        position: relative;
        margin-top: calc(#{map_get($mq-container-indents, 'sx')} / 2);

        @include mq(sm) {
            z-index: 11;
        }

        @include mq(sx) {
            margin-top: 9rem;
        }

        @include mq(lg) {
            margin-top: 0;
        }
    }

    &__auto-image {
        position: relative;
        display: block !important; // slick overrides
        margin: 0 auto;
        width: 100%;
        transition: all $transition-duration-base;

        @include mq(sm) {
            padding-left: map_get($mq-container-indents, 'sx') / 2;
            padding-right: map_get($mq-container-indents, 'sx') / 2;
        }

        &::before,
        &::after {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translateX(-50%);
            z-index: 1;
            width: 100%;
            height: 100vw;
            content: '';
        }

        &::before {
            background: {
                position: 50% 0;
                size: contain;
                repeat: no-repeat;
                image: url("../img/model_ground.webp");
            };

            @include mq(sm) {
                width: 180vw;
                margin-right: -80vw;
            }
        }

        &::after {
            top: 80%;
            z-index: 0;
            height: 60vw;
            background-color: #f2f2f2;

            @include mq(sm) {
                height: 100vw;
            }
        }


        &.lazy-background {
            .mod_no-flexboxtweener & {
                .model-slider__auto-image-spinner-box {
                    z-index: 10;
                    display: block;
                }
            }

            .mod_no-intersectionobserver & {
                .spinner {
                    display: none;
                }
            }
        }

        .mod_no-intersectionobserver & {
            animation: model-slider-image-loader $transition-duration-base-min linear 1s 1 alternate forwards !important;
        }

        &.is-visible > img {
            animation: model-slider-image-loader $transition-duration-base-min linear 1s 1 alternate forwards !important;
        }

        > img {
            position: relative;
            z-index: 2;
            display: block;
            margin: 0 auto;
            will-change: opacity;
            opacity: 0;
            transition: opacity $transition-duration-base-min;

            @include mq(sm) {
                max-width: 100%;
            }

            @include mq(sx) {
                max-width: 54rem;

                @include mq-custom(max, 720px) {
                    width: 100%;
                }

                @include mq-custom(max, 860px) {
                    @include col-size(5/6)
                }
            }

            @include mq(md) {
                max-width: 68rem;

                @include mq-custom(max, 1024px) {
                    @include col-size(3/6)
                }
            }

            @include mq(lg) {
                max-width: 67rem;
            }

            @include mq-custom(min, #{map_get($mq-container-widths, 'xl')}) {
                width: auto;
                display: block;
                margin: 0 auto;
                max-width: 80rem;
            }
        }

        .mod_no-webp & {
            &::before {
                background-image: url("../img/model_ground.png");;

                @include mq(sm) {
                    width: 180vw;
                    margin-right: -80vw;
                }
            }
        }
    }

    &__auto-image-spinner-box {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 10;

        .is-visible & {
            animation: spinner__fade-out $transition-duration-base-min linear 0s 1 alternate forwards;
        }
    }

    &__model-tabs {
        position: relative;
        z-index: 7;
        display: flex;
        justify-content: center;
        opacity: 0;

        @include mq(sm) {
            @include scroll-not-scrollbar(auto, hidden);

            justify-content: flex-start;
            margin-top: map_get($mq-container-indents, 'sx') / 2;
            margin-left: -1 * map_get($mq-container-indents, 'sx') / 2;
            margin-right: -1 * map_get($mq-container-indents, 'sx') / 2;
            padding-left: map_get($mq-container-indents, 'sx') / 2;
            padding-right: map_get($mq-container-indents, 'sx') / 2;
        }

        .is-visible & {
            animation: model-slider-image-loader $transition-duration-base-min linear .5s 1 alternate forwards !important;
        }

        .tabs,
        .auto-tabs-menu {
            @include mq(sm) {
                margin: 0 auto;
            }
        }

        &--mobile-scroll-x {
            overflow: auto;
            justify-content: start;

            > .tabs {
                @include mq(sm) {
                    padding-left: 2.4rem;
                    padding-right: 2.4rem;
                }
            }
        }
    }

    &__tab-scroll-container {
        @include mq(sm) {
            overflow: auto;
        }
    }

    &__auto-information {
        position: relative;
        z-index: 15;
        max-width: 100%;

        @include mq(sm) {
            @include scroll-not-scrollbar(auto, hidden);

            margin-bottom: map-get($mq-container-indents, 'sx') / 2;
            overflow: auto;
        }

        @include mq(sx) {
            margin: 1.6rem 0 0;
            padding: 0 map_get($mq-container-indents, 'sx') map-get($mq-container-indents, 'sx') / 4;
            display: flex;
            justify-content: center;
        }

        @include mq(lg) {
            margin-top: 5rem;
        }

        .mod_flexboxtweener & {
            @include mq(md) {
                position: absolute;
                bottom: 0;
                left: 50%;
                transform: translateX(-50%);
                width: 100%;
            }
        }
    }

    &__auto-information-tabs-container {
        flex-shrink: 1;
        display: flex;
        align-items: center;
        transition: opacity $transition-duration-base-min;

        @include mq(sm) {
            padding-left: 2.4rem;
            padding-right: 2.4rem;
        }

        @include mq(sx) {
            justify-content: center;
            width: 100%;
        }

        &.is-hidden {
            @include mq(sx) {
                visibility: hidden;
                opacity: 0;
            }
        }
    }

    &__auto-information-tabs {
        display: flex;
        justify-content: center;
        align-items: center;

        @include mq(md) {
            flex-basis: calc(100% - 80px);
        }

        > .tabs {
            margin-top: -1 * map_get($mq-container-indents, 'sx') / 4;
            padding-top: map_get($mq-container-indents, 'sx') / 2; // for counter

            .tabs__item {
                > a {
                    &.is-current {
                        border-radius: 1.6rem;
                        border-color: $color-lighter;
                        pointer-events: none;
                    }
                }
            }
        }
    }

    &__graph-link {
        @include size(4.8rem);

        display: none;
        border-radius: 50%;
        min-width: 4.8rem;
        background: {
            position: 50% 50%;
            repeat: no-repeat;
            image: url(../img/icons/graph.svg);
        };

        @include mq(sx) {
            display: block;
            margin-left: 2rem;
        }
    }

    .slick-list {
        overflow: visible;
    }

    .slick-prev,
    .slick-next {
        &.slick-prev {
            left: 0;
        }

        &.slick-next {
            right: 0;
        }
    }
}

.model-auto-types {
    position: absolute;
    top: 0;
    right: 0;
    min-width: 20rem;
    border-radius: $border-radius-min;
    overflow: hidden;
    background: $color-base;
    z-index: 10;

    @include mq(sm) {
        display: none;
    }

    &__tabs,
    &__content {
        list-style: none;
    }

    &__tabs {
        display: flex;

        > li {
            width: 50%;

            > a {
                @include text-small(400);

                display: block;
                padding: .6rem;
                background: #333333;
                white-space: nowrap;
                text-align: center;
                color: #fff;

                &.is-current {
                    background: transparent;
                    pointer-events: none;
                }
            }
        }
    }

    &__content {
        padding: map-get($mq-container-indents, 'sx') / 4;
        color: #fff;

        > li {
            &:not(:last-child) {
                margin-bottom: .8rem;

                > dl {

                    > dt,
                    > dd {
                        display: block;
                    }

                    > dt {
                        @include text-small(400);
                    }

                    > dd {
                        @include font(2.1rem, 2.4rem);

                        font-weight: 400;

                        @include mq(lg) {
                            @include font(2.8rem, 3.2rem);
                        }
                    }
                }
            }
        }
    }

    &__action {
        margin-top: map-get($mq-container-indents, 'sx') / 4;
        
        .button {
            display: block;
        }
    }
}
